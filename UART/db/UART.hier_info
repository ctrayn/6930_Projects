|UART
ADC_CLK_10 => baud_pll:put.inclk0
ADC_CLK_10 => data_tx[0].CLK
ADC_CLK_10 => data_tx[1].CLK
ADC_CLK_10 => data_tx[2].CLK
ADC_CLK_10 => data_tx[3].CLK
ADC_CLK_10 => data_tx[4].CLK
ADC_CLK_10 => data_tx[5].CLK
ADC_CLK_10 => data_tx[6].CLK
ADC_CLK_10 => data_tx[7].CLK
ADC_CLK_10 => TX_flag.CLK
ADC_CLK_10 => my_UART:dut.clk
ADC_CLK_10 => state~3.DATAIN
KEY[0] => baud_pll:put.areset
KEY[0] => my_UART:dut.rst_l
KEY[0] => data_tx[0].ACLR
KEY[0] => data_tx[1].ACLR
KEY[0] => data_tx[2].ACLR
KEY[0] => data_tx[3].ACLR
KEY[0] => data_tx[4].ACLR
KEY[0] => data_tx[5].ACLR
KEY[0] => data_tx[6].ACLR
KEY[0] => data_tx[7].ACLR
KEY[0] => TX_flag.ACLR
KEY[0] => state~5.DATAIN
KEY[1] => ~NO_FANOUT~
RX << my_UART:dut.RX
Tx => my_UART:dut.TX


|UART|baud_pll:put
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|UART|baud_pll:put|altpll:altpll_component
inclk[0] => baud_pll_altpll:auto_generated.inclk[0]
inclk[1] => baud_pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => baud_pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= baud_pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|UART|baud_pll:put|altpll:altpll_component|baud_pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|UART|my_UART:dut
clk => ~NO_FANOUT~
rst_l => ~NO_FANOUT~
TX => ~NO_FANOUT~
RX <= RX.DB_MAX_OUTPUT_PORT_TYPE
TX_flag => ~NO_FANOUT~
RX_flag <= RX_flag.DB_MAX_OUTPUT_PORT_TYPE
data_tx[0] => ~NO_FANOUT~
data_tx[1] => ~NO_FANOUT~
data_tx[2] => ~NO_FANOUT~
data_tx[3] => ~NO_FANOUT~
data_tx[4] => ~NO_FANOUT~
data_tx[5] => ~NO_FANOUT~
data_tx[6] => ~NO_FANOUT~
data_tx[7] => ~NO_FANOUT~
data_rx[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
data_rx[1] <= data_rx[1].DB_MAX_OUTPUT_PORT_TYPE
data_rx[2] <= data_rx[2].DB_MAX_OUTPUT_PORT_TYPE
data_rx[3] <= data_rx[3].DB_MAX_OUTPUT_PORT_TYPE
data_rx[4] <= data_rx[4].DB_MAX_OUTPUT_PORT_TYPE
data_rx[5] <= data_rx[5].DB_MAX_OUTPUT_PORT_TYPE
data_rx[6] <= data_rx[6].DB_MAX_OUTPUT_PORT_TYPE
data_rx[7] <= data_rx[7].DB_MAX_OUTPUT_PORT_TYPE


